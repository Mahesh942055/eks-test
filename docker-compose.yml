# version: '3.8'

# networks:
#   app-network:

# # volumes:
# #   app-data:

# services:
#   webserver:
#     image: nginx:1.21.6-alpine
#     container_name: webserver
#     restart: unless-stopped
#     working_dir: /var/www
#     ports:
#       - "80:80"
#     volumes:
#       - ./:/var/www
#       - .docker/nginx:/etc/nginx/conf.d
#     networks:
#       app-network:

#   backend:
#     build:
#       context: .docker/php
#       dockerfile: dockerfile
#     container_name: backend
#     working_dir: /var/www
#     volumes:
#       - ./:/var/www
#       - .docker/php/php.ini:/usr/local/etc/php/conf.d/local.ini
#     networks:
#       app-network:



version: "3.7"
services:
  backend:
    build:
      context: .docker/php
      dockerfile: dockerfile
    container_name: backend
    working_dir: /var/www
    restart: always
    volumes:
      - ./:/var/www
      - .docker/php/php.ini:/usr/local/etc/php/conf.d/local.ini


  webserver:
    image: nginx:1.21.6-alpine
    container_name: webserver
    restart: unless-stopped
    working_dir: /var/www
    ports:
      - "80:80"
    volumes:
      - ./:/var/www
      - .docker/nginx:/etc/nginx/conf.d

    # ports:
    #   - 8181:80

  # s3:
  #   image: minio/minio
  #   restart: always
  #   ports:
  #     - 9000:9000
  #   volumes:
  #     - miniodata:/export
  #     - miniodata:/root/.minio
  #   environment:
  #     MINIO_ACCESS_KEY: ${AWS_ACCESS_KEY_ID}
  #     MINIO_SECRET_KEY: ${AWS_SECRET_ACCESS_KEY}
  #   command: minio server /export

  # mailhog:
  #   image: mailhog/mailhog:latest
  #   restart: always
  #   ports:
  #       - 1025:1025
  #       - 8025:8025

  # redis:
  #   image: redis:alpine
  #   restart: always
  #   command: redis-server --appendonly yes
  #   ports:
  #     - 6379:6379

  # database:
  #   image: mariadb:10.8.2
  #   restart: always
  #   volumes:
  #     - dbdata:/var/lib/mysql
  #     - ./docker/cache.cnf:/etc/mysql/conf.d/cache.cnf
  #   environment:
  #     MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
  #     MYSQL_DATABASE: ${DB_DATABASE}
  #     MYSQL_USER: ${DB_USERNAME}
  #     MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
  #   ports:
  #     - 3306:3306

  # testdb:
  #   image: mariadb:10.8.2
  #   restart: always
  #   volumes:
  #     - test_dbdata:/var/lib/mysql
  #     - ./docker/cache.cnf:/etc/mysql/conf.d/cache.cnf
  #   environment:
  #     MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
  #     MYSQL_DATABASE: ${DB_TEST_DATABASE}
  #     MYSQL_USER: ${DB_USERNAME}
  #     MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
  #   ports:
  #     - 3307:3306

volumes:
    dbdata:
    test_dbdata:
    miniodata: